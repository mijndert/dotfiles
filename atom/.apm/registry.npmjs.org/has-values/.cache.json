{"_id":"has-values","_rev":"7-e4c512dd049f1495221709921c9cd707","name":"has-values","description":"Returns true if any values exist, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays. ","dist-tags":{"latest":"1.0.0"},"versions":{"0.1.1":{"name":"has-values","description":"Returns true if a value exists, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays. Other libs do this, but I needed one that would optionally _not_ treat zero as empty. Also, this works with booleans and other valu","version":"0.1.1","homepage":"https://github.com/jonschlinkert/has-values","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"repository":{"type":"git","url":"git://github.com/jonschlinkert/has-values.git"},"bugs":{"url":"https://github.com/jonschlinkert/has-values/issues"},"license":{"type":"MIT","url":"https://github.com/jonschlinkert/has-values/blob/master/LICENSE"},"files":["index.js"],"main":"index.js","engines":{"node":">=0.10.0"},"scripts":{"test":"mocha"},"devDependencies":{"mocha":"*","should":"^4.0.4"},"keywords":["array","boolean","empty","find","function","has","hasOwn","javascript","js","key","keys","node.js","null","number","object","properties","property","string","type","util","utilities","utility","value"],"gitHead":"9e6e72d2d2d41c67131051eaa5c940d67f5b965f","_id":"has-values@0.1.1","_shasum":"af131afe61081fa8bcefecc608e3bcc8e556619f","_from":".","_npmVersion":"2.7.1","_nodeVersion":"1.6.2","_npmUser":{"name":"jonschlinkert","email":"github@sellside.com"},"maintainers":[{"name":"jonschlinkert","email":"github@sellside.com"}],"dist":{"shasum":"af131afe61081fa8bcefecc608e3bcc8e556619f","tarball":"https://registry.npmjs.org/has-values/-/has-values-0.1.1.tgz"},"directories":{}},"0.1.2":{"name":"has-values","description":"Returns true if a value exists, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays. Other libs do this, but I needed one that would optionally _not_ treat zero as empty. Also, this works with booleans and other valu","version":"0.1.2","homepage":"https://github.com/jonschlinkert/has-values","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"repository":{"type":"git","url":"git://github.com/jonschlinkert/has-values.git"},"bugs":{"url":"https://github.com/jonschlinkert/has-values/issues"},"license":{"type":"MIT","url":"https://github.com/jonschlinkert/has-values/blob/master/LICENSE"},"files":["index.js"],"main":"index.js","engines":{"node":">=0.10.0"},"scripts":{"test":"mocha"},"devDependencies":{"mocha":"*","should":"^4.0.4"},"keywords":["array","boolean","empty","find","function","has","hasOwn","javascript","js","key","keys","node.js","null","number","object","properties","property","string","type","util","utilities","utility","value"],"gitHead":"9e6e72d2d2d41c67131051eaa5c940d67f5b965f","_id":"has-values@0.1.2","_shasum":"804a721f892a31ee86ae118109fdacaafae6bcf3","_from":".","_npmVersion":"2.7.1","_nodeVersion":"1.6.2","_npmUser":{"name":"jonschlinkert","email":"github@sellside.com"},"maintainers":[{"name":"jonschlinkert","email":"github@sellside.com"}],"dist":{"shasum":"804a721f892a31ee86ae118109fdacaafae6bcf3","tarball":"https://registry.npmjs.org/has-values/-/has-values-0.1.2.tgz"},"directories":{}},"0.1.3":{"name":"has-values","description":"Returns true if any values exist, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays. ","version":"0.1.3","homepage":"https://github.com/jonschlinkert/has-values","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"repository":{"type":"git","url":"git://github.com/jonschlinkert/has-values.git"},"bugs":{"url":"https://github.com/jonschlinkert/has-values/issues"},"license":{"type":"MIT","url":"https://github.com/jonschlinkert/has-values/blob/master/LICENSE"},"files":["index.js"],"main":"index.js","engines":{"node":">=0.10.0"},"scripts":{"test":"mocha"},"devDependencies":{"mocha":"*","should":"^4.0.4"},"keywords":["array","boolean","empty","find","function","has","hasOwn","javascript","js","key","keys","node.js","null","number","object","properties","property","string","type","util","utilities","utility","value"],"gitHead":"d47866d2a5e7af8803bf0af69f71b161eaba50b4","_id":"has-values@0.1.3","_shasum":"f0fb706128d3516bc8713cd14aaf2370598ee797","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.12.0","_npmUser":{"name":"jonschlinkert","email":"github@sellside.com"},"maintainers":[{"name":"jonschlinkert","email":"github@sellside.com"}],"dist":{"shasum":"f0fb706128d3516bc8713cd14aaf2370598ee797","tarball":"https://registry.npmjs.org/has-values/-/has-values-0.1.3.tgz"},"directories":{}},"0.1.4":{"name":"has-values","version":"0.1.4","description":"Returns true if any values exist, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays. ","homepage":"https://github.com/jonschlinkert/has-values","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"repository":{"type":"git","url":"git+https://github.com/jonschlinkert/has-values.git"},"bugs":{"url":"https://github.com/jonschlinkert/has-values/issues"},"license":"MIT","files":["index.js"],"main":"index.js","engines":{"node":">=0.10.0"},"scripts":{"test":"mocha"},"devDependencies":{"gulp-format-md":"^0.1.7","mocha":"^2.4.5"},"keywords":["array","boolean","empty","find","function","has","hasOwn","javascript","js","key","keys","node.js","null","number","object","properties","property","string","type","util","utilities","utility","value"],"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["has-value","isobject","is-plain-object"]},"reflinks":["verb"],"lint":{"reflinks":true}},"gitHead":"199a3eacd663b4ae4b00aef5ef5541aa2c7c8089","_id":"has-values@0.1.4","_shasum":"6d61de95d91dfca9b9a02089ad384bff8f62b771","_from":".","_npmVersion":"3.6.0","_nodeVersion":"5.5.0","_npmUser":{"name":"jonschlinkert","email":"github@sellside.com"},"maintainers":[{"name":"jonschlinkert","email":"github@sellside.com"}],"dist":{"shasum":"6d61de95d91dfca9b9a02089ad384bff8f62b771","tarball":"https://registry.npmjs.org/has-values/-/has-values-0.1.4.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/has-values-0.1.4.tgz_1459080711641_0.050919414730742574"},"directories":{}},"1.0.0":{"name":"has-values","description":"Returns true if any values exist, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays. ","version":"1.0.0","homepage":"https://github.com/jonschlinkert/has-values","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"repository":{"type":"git","url":"git+https://github.com/jonschlinkert/has-values.git"},"bugs":{"url":"https://github.com/jonschlinkert/has-values/issues"},"license":"MIT","files":["index.js"],"main":"index.js","engines":{"node":">=0.10.0"},"scripts":{"test":"mocha"},"dependencies":{"is-number":"^3.0.0","kind-of":"^4.0.0"},"devDependencies":{"gulp-format-md":"^0.1.12","mocha":"^3.4.1"},"keywords":["array","boolean","empty","find","function","has","hasOwn","javascript","js","key","keys","node.js","null","number","object","properties","property","string","type","util","utilities","utility","value","values"],"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["has-value","kind-of","is-number","is-plain-object","isobject"]},"reflinks":["verb"],"lint":{"reflinks":true}},"gitHead":"fead695044aafcfb337c7125af5479c7eaf1c92c","_id":"has-values@1.0.0","_shasum":"95b0b63fec2146619a6fe57fe75628d5a39efe4f","_from":".","_npmVersion":"4.6.1","_nodeVersion":"7.7.3","_npmUser":{"name":"jonschlinkert","email":"github@sellside.com"},"maintainers":[{"name":"jonschlinkert","email":"github@sellside.com"}],"dist":{"shasum":"95b0b63fec2146619a6fe57fe75628d5a39efe4f","tarball":"https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/has-values-1.0.0.tgz_1495219418678_0.2592258816584945"},"directories":{}}},"readme":"# has-values [![NPM version](https://img.shields.io/npm/v/has-values.svg?style=flat)](https://www.npmjs.com/package/has-values) [![NPM monthly downloads](https://img.shields.io/npm/dm/has-values.svg?style=flat)](https://npmjs.org/package/has-values) [![NPM total downloads](https://img.shields.io/npm/dt/has-values.svg?style=flat)](https://npmjs.org/package/has-values) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/has-values.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/has-values)\n\n> Returns true if any values exist, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save has-values\n```\n\n## Usage\n\n```js\nvar hasValue = require('has-values');\n\nhasValue('a');\n//=> true\n\nhasValue('');\n//=> false\n\nhasValue(1);\n//=> true\n\nhasValue(0);\n//=> false\n\nhasValue({a: 'a'}});\n//=> true\n\nhasValue({});\nhasValue({foo: undefined});\n//=> false\n\nhasValue({foo: null});\n//=> true\n\nhasValue(['a']);\n//=> true\n\nhasValue([]);\nhasValue([[], []]);\nhasValue([[[]]]);\n//=> false\n\nhasValue(['foo']);\nhasValue([0]);\n//=> true\n\nhasValue(function(foo) {}); \n//=> true\n\nhasValue(function() {});\n//=> true\n\nhasValue(true);\n//=> true\n\nhasValue(false);\n//=> true\n```\n\n## isEmpty\n\nTo test for empty values, do:\n\n```js\nfunction isEmpty(o, isZero) {\n  return !hasValue(o, isZero);\n}\n```\n\n## Release history\n\n### v1.0.0\n\n* `zero` always returns true\n* `array` now recurses, so that an array of empty arrays will return `false`\n* `null` now returns true\n\n## About\n\n### Related projects\n\n* [has-value](https://www.npmjs.com/package/has-value): Returns true if a value exists, false if empty. Works with deeply nested values using… [more](https://github.com/jonschlinkert/has-value) | [homepage](https://github.com/jonschlinkert/has-value \"Returns true if a value exists, false if empty. Works with deeply nested values using object paths.\")\n* [is-number](https://www.npmjs.com/package/is-number): Returns true if the value is a number. comprehensive tests. | [homepage](https://github.com/jonschlinkert/is-number \"Returns true if the value is a number. comprehensive tests.\")\n* [is-plain-object](https://www.npmjs.com/package/is-plain-object): Returns true if an object was created by the `Object` constructor. | [homepage](https://github.com/jonschlinkert/is-plain-object \"Returns true if an object was created by the `Object` constructor.\")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n* [kind-of](https://www.npmjs.com/package/kind-of): Get the native type of a value. | [homepage](https://github.com/jonschlinkert/kind-of \"Get the native type of a value.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on May 19, 2017._","maintainers":[{"name":"jonschlinkert","email":"github@sellside.com"}],"time":{"modified":"2017-11-16T22:28:50.049Z","created":"2015-03-25T02:12:55.847Z","0.1.1":"2015-03-25T02:12:55.847Z","0.1.2":"2015-03-25T02:13:20.984Z","0.1.3":"2015-03-27T21:09:00.648Z","0.1.4":"2016-03-27T12:11:52.568Z","1.0.0":"2017-05-19T18:43:39.654Z"},"homepage":"https://github.com/jonschlinkert/has-values","keywords":["array","boolean","empty","find","function","has","hasOwn","javascript","js","key","keys","node.js","null","number","object","properties","property","string","type","util","utilities","utility","value","values"],"repository":{"type":"git","url":"git+https://github.com/jonschlinkert/has-values.git"},"author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/has-values/issues"},"license":"MIT","readmeFilename":"README.md","users":{"rocket0191":true,"bsara":true},"_attachments":{},"_etag":"W/\"5a0e1122-3427\"","_lastModified":"Thu, 16 Nov 2017 22:28:50 GMT"}