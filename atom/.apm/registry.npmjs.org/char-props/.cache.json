{"_id":"char-props","_rev":"13-af093def084a45341ec0d93b99ccc55a","name":"char-props","description":"Utility for looking up line and column of a character at a given index and vice versa","dist-tags":{"latest":"0.1.5"},"versions":{"0.1.0":{"name":"char-props","description":"Retrieve line and column of a character at a given index.","version":"0.1.0","homepage":"https://github.com/twolfson/char-props","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/char-props.git"},"bugs":{"url":"https://github.com/twolfson/char-props/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/char-props/blob/master/LICENSE-MIT"}],"main":"lib/charProps","engines":{"node":">= 0.6.0"},"scripts":{"test":"vows"},"devDependencies":{"grunt":"~0.3.12","vows":"~0.6.4"},"keywords":[],"readme":"# char-props\n\nRetrieve line and column of a character at a given index.\n\n## Getting Started\nInstall the module with: `npm install charProps`\n\n## Documentation\n```js\n// charProps is a function which invokes the Indexer constructor\n\n// Indexer JSDoc\n/**\n * Indexer constructor (takes index and performs pre-emptive caching)\n * @constructor\n * @param {String} input Content to index\n */\n\n// Indexer.lineAt JSDoc\n/**\n * Get the line of the character at a certain index\n * @param {Number} index Index of character to retrieve line of\n * @param {Object} [options] Options to use for search\n * @param {Number} [options.minLine=0] Minimum line for us to search on\n * TODO: The following still have to be built/implemented\n * @param {Number} [options.maxLine=lines.length] Maximum line for us to search on\n * @param {String} [options.guess=\"average\"] Affects searching pattern -- can be \"high\", \"low\", or \"average\" (linear top-down, linear bottom-up, or binary)\n * @returns {Number} Line number of character\n */\n\n// Indexer.columnAt JSDoc\n/**\n * Get the column of the character at a certain index\n * @param {Number} index Index of character to retrieve column of\n * @returns {Number} Column number of character\n */\n```\n\n## Examples\n_(Coming soon)_\n\nFor now, please refer to [tests](/blob/master/test/charProps_test.js).\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using vows.\n\n## License\nCopyright (c) 2012 Todd Wolfson\nLicensed under the MIT license.\n","_id":"char-props@0.1.0","dist":{"shasum":"7a093cc03abd008fdc8e5eb52145a7520c0063ec","tarball":"https://registry.npmjs.org/char-props/-/char-props-0.1.0.tgz"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"directories":{}},"0.1.1":{"name":"char-props","description":"Retrieve line and column of a character at a given index.","version":"0.1.1","homepage":"https://github.com/twolfson/char-props","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/char-props.git"},"bugs":{"url":"https://github.com/twolfson/char-props/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/char-props/blob/master/LICENSE-MIT"}],"main":"lib/charProps","engines":{"node":">= 0.6.0"},"scripts":{"test":"vows test/* --spec"},"devDependencies":{"grunt":"~0.3.12","vows":"~0.6.4"},"keywords":[],"readme":"# char-props\n\nRetrieve line and column of a character at a given index.\n\n## Getting Started\nInstall the module with: `npm install charProps`\n\n## Documentation\n```js\n// charProps is a function which invokes the Indexer constructor\n\n// Indexer JSDoc\n/**\n * Indexer constructor (takes index and performs pre-emptive caching)\n * @constructor\n * @param {String} input Content to index\n */\n\n// Indexer.lineAt JSDoc\n/**\n * Get the line of the character at a certain index\n * @param {Number} index Index of character to retrieve line of\n * @param {Object} [options] Options to use for search\n * @param {Number} [options.minLine=0] Minimum line for us to search on\n * TODO: The following still have to be built/implemented\n * @param {Number} [options.maxLine=lines.length] Maximum line for us to search on\n * @param {String} [options.guess=\"average\"] Affects searching pattern -- can be \"high\", \"low\", or \"average\" (linear top-down, linear bottom-up, or binary)\n * @returns {Number} Line number of character\n */\n\n// Indexer.columnAt JSDoc\n/**\n * Get the column of the character at a certain index\n * @param {Number} index Index of character to retrieve column of\n * @returns {Number} Column number of character\n */\n\n// Indexer.indexAt JSDoc\n/**\n * Get the index of the character at a line and column\n * @param {Object} params Object containing line and column\n * @param {Number} params.line Line of character\n * @param {Number} params.column Column of character\n * @returns {Number} Index of character\n */\n\n// Indexer.charAt JSDoc\n/**\n * Get the character at a line and column\n * @param {Object} params Object containing line and column\n * @param {Number} params.line Line of character\n * @param {Number} params.column Column of character\n * @returns {String} Character at specified location\n */\n```\n\n## Examples\n_(Coming soon)_\n\nFor now, please refer to [tests](/blob/master/test/charProps_test.js).\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint your code via [grunt](http://gruntjs.com/) and test via [vows](http://vowsjs.org/).\n\n## License\nCopyright (c) 2012 Todd Wolfson\nLicensed under the MIT license.\n","_id":"char-props@0.1.1","dist":{"shasum":"3120b56aa0770508f47da1b049fd031b91bfda20","tarball":"https://registry.npmjs.org/char-props/-/char-props-0.1.1.tgz"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"directories":{}},"0.1.2":{"name":"char-props","description":"Utility for looking up line and column of a character at a given index and vice versa","version":"0.1.2","homepage":"https://github.com/twolfson/char-props","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/char-props.git"},"bugs":{"url":"https://github.com/twolfson/char-props/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/char-props/blob/master/LICENSE-MIT"}],"main":"lib/charProps","engines":{"node":">= 0.6.0"},"scripts":{"test":"vows test/* --spec"},"devDependencies":{"grunt":"~0.3.12","vows":"~0.6.4"},"keywords":["character","lookup","line","row","column","index"],"readme":"# char-props\n\nUtility for looking up line and column of a character at a given index and vice versa.\n\n## Getting Started\nInstall the module with: `npm install charProps`\n\n## Documentation\n```js\n// charProps is a function which invokes the Indexer constructor\n\n// Indexer JSDoc\n/**\n * Indexer constructor (takes index and performs pre-emptive caching)\n * @constructor\n * @param {String} input Content to index\n */\n\n// Indexer.lineAt JSDoc\n/**\n * Get the line of the character at a certain index\n * @param {Number} index Index of character to retrieve line of\n * @param {Object} [options] Options to use for search\n * @param {Number} [options.minLine=0] Minimum line for us to search on\n * TODO: The following still have to be built/implemented\n * @param {Number} [options.maxLine=lines.length] Maximum line for us to search on\n * @param {String} [options.guess=\"average\"] Affects searching pattern -- can be \"high\", \"low\", or \"average\" (linear top-down, linear bottom-up, or binary)\n * @returns {Number} Line number of character\n */\n\n// Indexer.columnAt JSDoc\n/**\n * Get the column of the character at a certain index\n * @param {Number} index Index of character to retrieve column of\n * @returns {Number} Column number of character\n */\n\n// Indexer.indexAt JSDoc\n/**\n * Get the index of the character at a line and column\n * @param {Object} params Object containing line and column\n * @param {Number} params.line Line of character\n * @param {Number} params.column Column of character\n * @returns {Number} Index of character\n */\n\n// Indexer.charAt JSDoc\n/**\n * Get the character at a line and column\n * @param {Object} params Object containing line and column\n * @param {Number} params.line Line of character\n * @param {Number} params.column Column of character\n * @returns {String} Character at specified location\n */\n```\n\n## Examples\n_(Coming soon)_\n\nFor now, please refer to [tests](/blob/master/test/charProps_test.js).\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint your code via [grunt](http://gruntjs.com/) and test via [vows](http://vowsjs.org/).\n\n## License\nCopyright (c) 2012 Todd Wolfson\nLicensed under the MIT license.\n","_id":"char-props@0.1.2","dist":{"shasum":"8efda4e8d355d00cfc2bdef40bb67b58a1994f99","tarball":"https://registry.npmjs.org/char-props/-/char-props-0.1.2.tgz"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"directories":{}},"0.1.3":{"name":"char-props","description":"Utility for looking up line and column of a character at a given index and vice versa","version":"0.1.3","homepage":"https://github.com/twolfson/char-props","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/char-props.git"},"bugs":{"url":"https://github.com/twolfson/char-props/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/char-props/blob/master/LICENSE-MIT"}],"main":"lib/charProps","engines":{"node":">= 0.6.0"},"scripts":{"test":"vows test/* --spec"},"devDependencies":{"grunt":"~0.3.12","vows":"~0.6.4"},"keywords":["character","lookup","line","row","column","index"],"readme":"# char-props\n\nUtility for looking up line and column of a character at a given index and vice versa.\n\n## Getting Started\nInstall the module with: `npm install charProps`\n\n## Documentation\n```js\n// charProps is a function which invokes the Indexer constructor\n\n// Indexer JSDoc\n/**\n * Indexer constructor (takes index and performs pre-emptive caching)\n * @constructor\n * @param {String} input Content to index\n */\n\n// Indexer.lineAt JSDoc\n/**\n * Get the line of the character at a certain index\n * @param {Number} index Index of character to retrieve line of\n * @param {Object} [options] Options to use for search\n * @param {Number} [options.minLine=0] Minimum line for us to search on\n * TODO: The following still have to be built/implemented\n * @param {Number} [options.maxLine=lines.length] Maximum line for us to search on\n * @param {String} [options.guess=\"average\"] Affects searching pattern -- can be \"high\", \"low\", or \"average\" (linear top-down, linear bottom-up, or binary)\n * @returns {Number} Line number of character\n */\n\n// Indexer.columnAt JSDoc\n/**\n * Get the column of the character at a certain index\n * @param {Number} index Index of character to retrieve column of\n * @returns {Number} Column number of character\n */\n\n// Indexer.indexAt JSDoc\n/**\n * Get the index of the character at a line and column\n * @param {Object} params Object containing line and column\n * @param {Number} params.line Line of character\n * @param {Number} params.column Column of character\n * @returns {Number} Index of character\n */\n\n// Indexer.charAt JSDoc\n/**\n * Get the character at a line and column\n * @param {Object} params Object containing line and column\n * @param {Number} params.line Line of character\n * @param {Number} params.column Column of character\n * @returns {String} Character at specified location\n */\n```\n\n## Examples\n### Initial load\n```js\nvar charProps = require('char-props'),\n    jquerySrc = fs.readFileSync('jquery.js', 'utf8');\n\n// Load jQuery into charProps\nvar jqueryProps = charProps(jquerySrc);\n```\n\n### lineAt usage\n```js\n// Look up line of character at index 42\njqueryProps.lineAt(42);\n```\n\n### columnAt usage\n```js\n// Look up column of character at index 88\njqueryProps.columnAt(88);\n```\n\n### indexAt usage\n```js\n// Look up the index of a character at line 9000, column 1\njqueryProps.indexAt({'line': 9000, 'column': 1});\n```\n\n### charAt usage\n```js\n// Get the character at line 20, column 20\njqueryProps.charAt({'line': 20, 'column': 20});\n```\n\n## lineAt advanced usage\n```js\n// Look up line of character at index 9001 with a minimum line of 99\njqueryProps.lineAt(9001, {'minLine': 99});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint your code via [grunt](http://gruntjs.com/) and test via [vows](http://vowsjs.org/).\n\n## License\nCopyright (c) 2012 Todd Wolfson\nLicensed under the MIT license.\n","_id":"char-props@0.1.3","dist":{"shasum":"056dd4611e59ea30cbbd87373a86f13767969eb2","tarball":"https://registry.npmjs.org/char-props/-/char-props-0.1.3.tgz"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"directories":{}},"0.1.4":{"name":"char-props","description":"Utility for looking up line and column of a character at a given index and vice versa","version":"0.1.4","homepage":"https://github.com/twolfson/char-props","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/char-props.git"},"bugs":{"url":"https://github.com/twolfson/char-props/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/char-props/blob/master/LICENSE-MIT"}],"main":"lib/charProps","engines":{"node":">= 0.6.0"},"scripts":{"test":"vows test/* --spec"},"devDependencies":{"grunt":"~0.3.12","vows":"~0.6.4"},"keywords":["character","lookup","line","row","column","index"],"readme":"# char-props [![Donate on Gittip](http://badgr.co/gittip/twolfson.png)](https://www.gittip.com/twolfson/) [![Donate on Gittip](http://badgr.co/gittip/twolfson.png)](https://www.gittip.com/twolfson/) [![Donate on Gittip](http://badgr.co/gittip/twolfson.png)](https://www.gittip.com/twolfson/)\n\nUtility for looking up line and column of a character at a given index and vice versa.\n\n## Getting Started\nInstall the module with: `npm install charProps`\n\n## Documentation\n```js\n// charProps is a function which invokes the Indexer constructor\n\n// Indexer JSDoc\n/**\n * Indexer constructor (takes index and performs pre-emptive caching)\n * @constructor\n * @param {String} input Content to index\n */\n\n// Indexer.lineAt JSDoc\n/**\n * Get the line of the character at a certain index\n * @param {Number} index Index of character to retrieve line of\n * @param {Object} [options] Options to use for search\n * @param {Number} [options.minLine=0] Minimum line for us to search on\n * TODO: The following still have to be built/implemented\n * @param {Number} [options.maxLine=lines.length] Maximum line for us to search on\n * @param {String} [options.guess=\"average\"] Affects searching pattern -- can be \"high\", \"low\", or \"average\" (linear top-down, linear bottom-up, or binary)\n * @returns {Number} Line number of character\n */\n\n// Indexer.columnAt JSDoc\n/**\n * Get the column of the character at a certain index\n * @param {Number} index Index of character to retrieve column of\n * @returns {Number} Column number of character\n */\n\n// Indexer.indexAt JSDoc\n/**\n * Get the index of the character at a line and column\n * @param {Object} params Object containing line and column\n * @param {Number} params.line Line of character\n * @param {Number} params.column Column of character\n * @returns {Number} Index of character\n */\n\n// Indexer.charAt JSDoc\n/**\n * Get the character at a line and column\n * @param {Object} params Object containing line and column\n * @param {Number} params.line Line of character\n * @param {Number} params.column Column of character\n * @returns {String} Character at specified location\n */\n```\n\n## Examples\n### Initial load\n```js\nvar charProps = require('char-props'),\n    jquerySrc = fs.readFileSync('jquery.js', 'utf8');\n\n// Load jQuery into charProps\nvar jqueryProps = charProps(jquerySrc);\n```\n\n### lineAt usage\n```js\n// Look up line of character at index 42\njqueryProps.lineAt(42);\n```\n\n### columnAt usage\n```js\n// Look up column of character at index 88\njqueryProps.columnAt(88);\n```\n\n### indexAt usage\n```js\n// Look up the index of a character at line 9000, column 1\njqueryProps.indexAt({'line': 9000, 'column': 1});\n```\n\n### charAt usage\n```js\n// Get the character at line 20, column 20\njqueryProps.charAt({'line': 20, 'column': 20});\n```\n\n## lineAt advanced usage\n```js\n// Look up line of character at index 9001 with a minimum line of 99\njqueryProps.lineAt(9001, {'minLine': 99});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint your code via [grunt](http://gruntjs.com/) and test via [vows](http://vowsjs.org/).\n\n## License\nCopyright (c) 2012 Todd Wolfson\nLicensed under the MIT license.\n","readmeFilename":"README.md","_id":"char-props@0.1.4","dist":{"shasum":"fbe4ae6a95792bdbf5c53460472fcc55a8787304","tarball":"https://registry.npmjs.org/char-props/-/char-props-0.1.4.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"directories":{}},"0.1.5":{"name":"char-props","description":"Utility for looking up line and column of a character at a given index and vice versa","version":"0.1.5","homepage":"https://github.com/twolfson/char-props","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/char-props.git"},"bugs":{"url":"https://github.com/twolfson/char-props/issues"},"licenses":[{"type":"MIT","url":"https://github.com/twolfson/char-props/blob/master/LICENSE-MIT"}],"main":"lib/charProps","engines":{"node":">= 0.6.0"},"scripts":{"test":"vows test/* --spec"},"devDependencies":{"grunt":"~0.3.12","vows":"~0.6.4"},"keywords":["character","lookup","line","row","column","index"],"readme":"# char-props [![Donate on Gittip](http://badgr.co/gittip/twolfson.png)](https://www.gittip.com/twolfson/)\n\nUtility for looking up line and column of a character at a given index and vice versa.\n\n## Getting Started\nInstall the module with: `npm install charProps`\n\n## Documentation\n```js\n// charProps is a function which invokes the Indexer constructor\n\n// Indexer JSDoc\n/**\n * Indexer constructor (takes index and performs pre-emptive caching)\n * @constructor\n * @param {String} input Content to index\n */\n\n// Indexer.lineAt JSDoc\n/**\n * Get the line of the character at a certain index\n * @param {Number} index Index of character to retrieve line of\n * @param {Object} [options] Options to use for search\n * @param {Number} [options.minLine=0] Minimum line for us to search on\n * TODO: The following still have to be built/implemented\n * @param {Number} [options.maxLine=lines.length] Maximum line for us to search on\n * @param {String} [options.guess=\"average\"] Affects searching pattern -- can be \"high\", \"low\", or \"average\" (linear top-down, linear bottom-up, or binary)\n * @returns {Number} Line number of character\n */\n\n// Indexer.columnAt JSDoc\n/**\n * Get the column of the character at a certain index\n * @param {Number} index Index of character to retrieve column of\n * @returns {Number} Column number of character\n */\n\n// Indexer.indexAt JSDoc\n/**\n * Get the index of the character at a line and column\n * @param {Object} params Object containing line and column\n * @param {Number} params.line Line of character\n * @param {Number} params.column Column of character\n * @returns {Number} Index of character\n */\n\n// Indexer.charAt JSDoc\n/**\n * Get the character at a line and column\n * @param {Object} params Object containing line and column\n * @param {Number} params.line Line of character\n * @param {Number} params.column Column of character\n * @returns {String} Character at specified location\n */\n```\n\n## Examples\n### Initial load\n```js\nvar charProps = require('char-props'),\n    jquerySrc = fs.readFileSync('jquery.js', 'utf8');\n\n// Load jQuery into charProps\nvar jqueryProps = charProps(jquerySrc);\n```\n\n### lineAt usage\n```js\n// Look up line of character at index 42\njqueryProps.lineAt(42);\n```\n\n### columnAt usage\n```js\n// Look up column of character at index 88\njqueryProps.columnAt(88);\n```\n\n### indexAt usage\n```js\n// Look up the index of a character at line 9000, column 1\njqueryProps.indexAt({'line': 9000, 'column': 1});\n```\n\n### charAt usage\n```js\n// Get the character at line 20, column 20\njqueryProps.charAt({'line': 20, 'column': 20});\n```\n\n## lineAt advanced usage\n```js\n// Look up line of character at index 9001 with a minimum line of 99\njqueryProps.lineAt(9001, {'minLine': 99});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint your code via [grunt](http://gruntjs.com/) and test via [vows](http://vowsjs.org/).\n\n## License\nCopyright (c) 2012 Todd Wolfson\nLicensed under the MIT license.\n","readmeFilename":"README.md","_id":"char-props@0.1.5","dist":{"shasum":"5b952f9e20ea21cd08ca7fe135a10f6fe91c109e","tarball":"https://registry.npmjs.org/char-props/-/char-props-0.1.5.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"directories":{}}},"readme":"# char-props\n\nRetrieve line and column of a character at a given index.\n\n## Getting Started\nInstall the module with: `npm install charProps`\n\n## Documentation\n```js\n// charProps is a function which invokes the Indexer constructor\n\n// Indexer JSDoc\n/**\n * Indexer constructor (takes index and performs pre-emptive caching)\n * @constructor\n * @param {String} input Content to index\n */\n\n// Indexer.lineAt JSDoc\n/**\n * Get the line of the character at a certain index\n * @param {Number} index Index of character to retrieve line of\n * @param {Object} [options] Options to use for search\n * @param {Number} [options.minLine=0] Minimum line for us to search on\n * TODO: The following still have to be built/implemented\n * @param {Number} [options.maxLine=lines.length] Maximum line for us to search on\n * @param {String} [options.guess=\"average\"] Affects searching pattern -- can be \"high\", \"low\", or \"average\" (linear top-down, linear bottom-up, or binary)\n * @returns {Number} Line number of character\n */\n\n// Indexer.columnAt JSDoc\n/**\n * Get the column of the character at a certain index\n * @param {Number} index Index of character to retrieve column of\n * @returns {Number} Column number of character\n */\n```\n\n## Examples\n_(Coming soon)_\n\nFor now, please refer to [tests](/blob/master/test/charProps_test.js).\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using vows.\n\n## License\nCopyright (c) 2012 Todd Wolfson\nLicensed under the MIT license.\n","maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"time":{"modified":"2013-06-18T11:22:26.095Z","created":"2012-10-07T03:45:07.097Z","0.1.0":"2012-10-07T03:45:09.234Z","0.1.1":"2012-10-08T00:59:04.922Z","0.1.2":"2012-10-08T04:47:01.557Z","0.1.3":"2012-10-09T07:40:23.673Z","0.1.4":"2013-06-18T11:08:49.846Z","0.1.5":"2013-06-18T11:22:26.095Z"},"author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"repository":{"type":"git","url":"git://github.com/twolfson/char-props.git"},"_attachments":{},"_etag":"W/\"51c042f2-5e84\"","_lastModified":"Tue, 18 Jun 2013 11:22:26 GMT"}